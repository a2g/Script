{
  "$id": "https://raw.githubusercontent.com/a2g/Gate/main/Gate.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "description": "A puzzle dependency graph defined in json schema. This Gate.json includes an enum of types of Gate nodes that describe an adventure game puzzle, and some jscon schema contraints for each nodes",
  "type": "object",
  "definitions": {
    "gate_type": {
      "properties": {
        "gate": {
          "$ref": "#/definitions/the_enum"
        },
        "count": {
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "conjoint": {
          "$ref": "#/definitions/gate_type"
        }
      },
      "required": [
        "gate"
      ],
      "allOf": [
        {
          "if": {
            "anyOf": [
              {
                "properties": {
                  "gate": {
                    "const": "INV1_AND_INV2_GENERATE_AN_INV3",
                    "examples": [
                      "eg none yet"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "INV1_AND_INV2_COMBINE_TO_FORM_INV3",
                    "examples": [
                      "not quite the amp fixing - but close"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "INV1_BECOMES_INV2_BY_KEEPING_INV3",
                    "examples": [
                      "eg FLAT BALL becomes INFLATED BALL via keeping PUMP"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "INV1_BECOMES_INV2_BY_LOSING_INV3",
                    "examples": [
                      "eg broken amp becomes FIXED AMP via losing RADIO_TUBE"
                    ]
                  }
                }
              }
            ]
          },
          "then": {
            "required": [
              "inv1",
              "inv2",
              "inv3"
            ],
            "not": {
              "required": [
                "prop1",
                "prop2",
                "prop3"
              ]
            }
          }
        },
        {
          "if": {
            "anyOf": [
              {
                "properties": {
                  "gate": {
                    "const": "INV1_WITH_PROP1_REVEALS_PROP2_KEPT_ALL",
                    "examples": [
                      "eg use ball with backboard generate prop"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "PROP1_BECOMES_PROP2_BY_LOSING_INV1",
                    "examples": [
                      "powerpoint -> plugged-in-amp via losing INV_FIXEDAMP"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "PROP1_BECOMES_PROP2_BY_KEEPING_INV1",
                    "examples": [
                      "eg RAISEDBACKBOARD becomes LOWEREDBACKBOARD vie keeping POLEHOOK",
                      "eg CLOSED_RADIO becomes  OPENED_RADIO_WITH_TUBE via keeping SCREWDRIVER"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "OBTAIN_INV1_BY_PROP1_WITH_PROP2_LOSE_PROPS",
                    "description": "By using the A with B you are able to obtain the INV",
                    "examples": [
                      "powerpoint -> plugged-in-amp via losing INV_FIXEDAMP",
                      "eg use radiation suit with the meteor"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "PROP1_BECOMES_PROP2_WHEN_GRAB_INV1",
                    "examples": [
                      "eg opened raio with radiotube becomes merely OPENED RADIO when you grab RADIOTUBE"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "PROP1_CHANGES_STATE_TO_PROP2_BY_KEEPING_INV1",
                    "description": "By using the A with B you are able to obtain the INV",
                    "examples": [
                      "eg use radiation suit with the meteor"
                    ]
                  }
                }
              }
            ]
          },
          "then": {
            "required": [
              "inv1",
              "prop1",
              "prop2"
            ],
            "not": {
              "required": [
                "inv2",
                "inv3",
                "prop3"
              ]
            }
          }
        },
        {
          "if": {
            "anyOf": [
              {
                "properties": {
                  "gate": {
                    "const": "TOGGLE_PROP1_REVEALS_PROP2_AS_IT_BECOMES_PROP3",
                    "examples": [
                      "eg open fridge, open window, open blind, open window"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "PROP1_APPEARS_WHEN_USE_INV1_WITH_PROP2",
                    "examples": [
                      "eg prop_crank appears when use use handle with well"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "PROP1_BECOMES_PROP2_BY_LOSING_PROP3",
                    "examples": [
                      "eg none yet"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "AUTO_PROP1_BECOMES_PROP2_BY_PROPS",
                    "examples": [
                      "eg none yet"
                    ]
                  }
                }
              }
            ]
          },
          "then": {
            "required": [
              "prop1",
              "prop2",
              "prop3"
            ],
            "not": {
              "required": [
                "inv1",
                "inv2",
                "inv3"
              ]
            }
          }
        },
        {
          "if": {
            "anyOf": [
              {
                "properties": {
                  "gate": {
                    "const": "PROP1_GOES_WHEN_GRAB_INV1",
                    "examples": [
                      "eg grab coconut"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "PROP1_STAYS_WHEN_GRAB_INV1",
                    "examples": [
                      "eg grab pile of coconuts"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "TALK_TO_PROP1_GETS_INV1",
                    "examples": [
                      "eg talk to woman"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "EXAMINE_PROP1_YIELDS_INV1",
                    "examples": [
                      "eg I thought this happened in DD but I read the solution wrong"
                    ]
                  }
                }
              }
            ]
          },
          "then": {
            "required": [
              "prop1",
              "inv1"
            ],
            "not": {
              "required": [
                "prop2",
                "prop3",
                "inv2",
                "inv3"
              ]
            }
          }
        },
        {
          "if": {
            "anyOf": [
              {
                "properties": {
                  "gate": {
                    "const": "TOGGLE_PROP1_BECOMES_PROP2",
                    "examples": [
                      "toggle magged up vacuum tubes"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "TOGGLE_PROP1_CHANGES_STATE_TO_PROP2",
                    "examples": [
                      "eg toggle on to off",
                      "eg activated to deactivated"
                    ]
                  }
                }
              }
            ]
          },
          "then": {
            "required": [
              "prop1",
              "prop2"
            ],
            "not": {
              "required": [
                "prop3",
                "inv1",
                "inv2",
                "inv3"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "gate": {
                "const": "AUTO_FLAG1_SET_BY_PROPS",
                "examples": [
                  "eg flag_wall_has_been_graffitied set by graffitied_wall"
                ]
              }
            }
          },
          "then": {
            "required": [
              "flag1"
            ],
            "not": {
              "required": [
                "inv1",
                "inv2",
                "inv3"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "gate": {
                "const": "AUTO_FLAG1_SET_BY_INVS",
                "examples": [
                  "eg flag_lit_torch set by inv_lit_torch"
                ]
              }
            }
          },
          "then": {
            "required": [
              "flag1"
            ],
            "not": {
              "required": [
                "prop1",
                "prop2",
                "prop3"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "gate": {
                "const": "FLAG1_SET_BY_USING_INV1_WITH_INV2",
                "examples": [
                  "eg use two invs together wins game"
                ]
              }
            }
          },
          "then": {
            "required": [
              "inv1",
              "inv2",
              "flag1"
            ],
            "not": {
              "required": [
                "prop1",
                "flag2",
                "flag3",
                "prop2",
                "prop3",
                "prop4",
                "prop5",
                "prop6",
                "prop7"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "gate": {
                "const": "FLAG1_SET_BY_USING_INV1_WITH_PROP1_NEED_FLAGS",
                "examples": [
                  "eg win game using use silver with werewolf during lunar eclipse"
                ]
              }
            }
          },
          "then": {
            "required": [
              "inv1",
              "prop1",
              "flag1",
              "flag2"
            ],
            "not": {
              "required": [
                "inv2",
                "flag3",
                "prop2",
                "prop3",
                "prop4",
                "prop5",
                "prop6",
                "prop7"
              ]
            }
          }
        },
        {
          "if": {
            "anyOf": [
              {
                "properties": {
                  "gate": {
                    "const": "FLAG1_SET_BY_USING_INV1_WITH_PROP1_LOSE_PROPS",
                    "examples": [
                      "eg toggle on to off",
                      "eg activated to deactivated"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "TALK_TO_PROP1_WITH_FLAG1_GETS_INV1",
                    "examples": [
                      "eg talk to woman after setting flag"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "FLAG1_SET_BY_LOSING_INV1_WHEN_USED_WITH_PROP1",
                    "examples": [
                      "eg flag is set when use cogs to fix dumbwaiter"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "GIVE_INV1_TO_PROP1_SETS_FLAG1",
                    "examples": [
                      "eg give gold to king completes game"
                    ]
                  }
                }
              }
            ]
          },
          "then": {
            "required": [
              "inv1",
              "prop1",
              "flag1"
            ],
            "not": {
              "required": [
                "inv2",
                "flag2",
                "flag3",
                "prop2",
                "prop3",
                "prop4",
                "prop5",
                "prop6",
                "prop7"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "gate": {
                "const": "FLAG1_SET_BY_USING_INV1_WITH_PROP1",
                "examples": [
                  "eg use sword with baddie wins game"
                ]
              }
            }
          },
          "then": {
            "required": [
              "inv1",
              "prop1",
              "flag1"
            ],
            "not": {
              "required": [
                "inv2",
                "flag2",
                "flag3",
                "prop2",
                "prop3",
                "prop4",
                "prop5",
                "prop6",
                "prop7"
              ]
            }
          }
        },
        {
          "if": {
            "anyof": [
              {
                "properties": {
                  "gate": {
                    "const": "FLAG1_SET_BY_USING_PROP1_WITH_PROP2",
                    "examples": [
                      "eg flag set by "
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "PROP1_APPEARS_WHEN_GRAB_PROP2_WITH_FLAG1",
                    "examples": [
                      "eg taxi appears when phone is used with electricity on"
                    ]
                  }
                }
              }
            ]
          },
          "then": {
            "required": [
              "prop1",
              "prop2",
              "flag1"
            ]
          }
        },
        {
          "if": {
            "anyOf": [
              {
                "properties": {
                  "gate": {
                    "const": "THROW_INV1_AT_PROP1_GETS_INV2_LOSE_BOTH",
                    "examples": [
                      "eg key throw rock at apple in tree, obtains apple (lose rock and apple in tree)"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "OBTAIN_INV1_BY_INV2_WITH_PROP1_LOSE_BOTH",
                    "examples": [
                      "eg key throw rock at apple in tree, obtains apple (lose rock and apple in tree)"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "OBTAIN_INV1_BY_INV2_WITH_PROP1_LOSE_NONE",
                    "examples": [
                      "eg no example, but might need it"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "INV1_BECOMES_INV2_BY_KEEPING_PROP",
                    "examples": [
                      "eg manuscript b edited via typewriter by keeping prop"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "GIVE_INV1_TO_PROP1_GETS_INV2",
                    "examples": [
                      "eg manuscript b edited via typewriter by keeping prop"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "INPUT_INV1_PROP1_BECOMES_PROP2",
                    "examples": [
                      "eg generic"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "INPUT_PROP1_INV1_BECOMES_INV2",
                    "examples": [
                      "eg generic"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "OBTAIN_INV1_BY_LOSING_INV2_KEEPING_PROP1",
                    "examples": [
                      "eg obtain cogs when losing key in clock"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "gate": {
                    "const": "OBTAIN_INV1_BY_LOSING_PROP1_KEEPING_INV2",
                    "examples": [
                      "eg obtain crank when use hurl to knock it off the well"
                    ]
                  }
                }
              }
            ],
            "then": {
              "required": [
                "inv1",
                "inv2",
                "prop1"
              ],
              "not": {
                "required": [
                  "inv3",
                  "prop2",
                  "prop3",
                  "prop4",
                  "prop5",
                  "prop6",
                  "prop7"
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "gate": {
                "const": "AUTO_FLAG1_SET_BY_FLAG2"
              }
            }
          },
          "then": {
            "required": [
              "flag1",
              "flag2"
            ],
            "not": {
              "required": [
                "prop1",
                "prop2",
                "prop3",
                "inv1",
                "inv2",
                "inv3"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "gate": {
                "const": "AUTO_FLAG1_SET_BY_FLAG2"
              }
            }
          },
          "then": {
            "required": [
              "flag1",
              "flag2"
            ],
            "not": {
              "required": [
                "flag3",
                "prop1",
                "prop2",
                "prop3",
                "inv1",
                "inv2",
                "inv3"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "gate": {
                "const": "FLAG1_SET_BY_LOSING_INV1_USED_WITH_PROP1_AND_PROPS"
              }
            }
          },
          "then": {
            "required": [
              "flag1",
              "inv1",
              "prop1",
              "prop2",
              "prop3"
            ],
            "not": {
              "required": [
                "inv2",
                "inv3"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "gate": {
                "const": "AUTO_FLAG1_CAUSES_IMPORT_OF_JSON"
              }
            }
          },
          "then": {
            "required": [
              "flag1",
              "fileToMerge"
            ],
            "not": {
              "required": [
                "flag2",
                "inv1",
                "inv2",
                "inv3",
                "prop1",
                "prop2",
                "prop3"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "gate": {
                "const": "PROP1_BECOMES_PROP2_AS_INV1_BECOMES_INV2"
              }
            }
          },
          "then": {
            "required": [
              "prop1",
              "prop2",
              "inv1",
              "inv2"
            ],
            "not": {
              "required": [
                "flag1",
                "flag2",
                "inv3",
                "prop3",
                "fileToMerge"
              ]
            }
          }
        }
      ]
    },
    "the_enum": {
      "enum": [
        "AUTO_FLAG1_CAUSES_IMPORT_OF_JSON",
        "AUTO_FLAG1_SET_BY_FLAG2",
        "AUTO_FLAG1_SET_BY_INVS",
        "AUTO_FLAG1_SET_BY_PROPS",
        "AUTO_PROP1_BECOMES_PROP2_BY_PROPS",
        "EXAMINE_PROP1_YIELDS_INV1",
        "FLAG1_SET_BY_LOSING_INV1_WHEN_USED_WITH_PROP1",
        "FLAG1_SET_BY_LOSING_INV1_USED_WITH_PROP1_AND_PROPS",
        "FLAG1_SET_BY_USING_INV1_WITH_INV2",
        "FLAG1_SET_BY_USING_INV1_WITH_PROP1",
        "FLAG1_SET_BY_USING_INV1_WITH_PROP1_LOSE_PROPS",
        "FLAG1_SET_BY_USING_INV1_WITH_PROP1_NEED_FLAGS",
        "FLAG1_SET_BY_USING_PROP1_WITH_PROP2",
        "GIVE_INV1_TO_PROP1_GETS_INV2",
        "GIVE_INV1_TO_PROP1_SETS_FLAG1",
        "INPUT_INV1_PROP1_BECOMES_PROP2",
        "INPUT_PROP1_INV1_BECOMES_INV2",
        "INV1_AND_INV2_COMBINE_TO_FORM_INV3",
        "INV1_AND_INV2_GENERATE_AN_INV3",
        "INV1_BECOMES_INV2_BY_KEEPING_INV3",
        "INV1_BECOMES_INV2_BY_KEEPING_PROP1",
        "INV1_BECOMES_INV2_BY_LOSING_INV3",
        "INV1_WITH_PROP1_REVEALS_PROP2_KEPT_ALL",
        "OBTAIN_INV1_BY_INV2_WITH_PROP1_LOSE_BOTH",
        "OBTAIN_INV1_BY_INV2_WITH_PROP1_LOSE_NONE",
        "OBTAIN_INV1_BY_LOSING_INV2_KEEPING_PROP1",
        "OBTAIN_INV1_BY_LOSING_PROP1_KEEPING_INV2",
        "OBTAIN_INV1_BY_PROP1_WITH_PROP2_LOSE_PROPS",
        "PROP1_APPEARS_WHEN_GRAB_PROP2_WITH_FLAG1",
        "PROP1_APPEARS_WHEN_USE_INV1_WITH_PROP2",
        "PROP1_BECOMES_PROP2_AS_INV1_BECOMES_INV2",
        "PROP1_BECOMES_PROP2_BY_KEEPING_INV1",
        "PROP1_BECOMES_PROP2_BY_KEEPING_PROP3",
        "PROP1_BECOMES_PROP2_BY_LOSING_INV1",
        "PROP1_BECOMES_PROP2_BY_LOSING_PROP3",
        "PROP1_BECOMES_PROP2_WHEN_GRAB_INV1",
        "PROP1_CHANGES_STATE_TO_PROP2_BY_KEEPING_INV1",
        "PROP1_GOES_WHEN_GRAB_INV1",
        "PROP1_STAYS_WHEN_GRAB_INV1",
        "TALK_TO_PROP1_GETS_INV1",
        "TALK_TO_PROP1_WITH_FLAG1_GETS_INV1",
        "THROW_INV1_AT_PROP1_GETS_INV2_LOSE_BOTH",
        "TOGGLE_PROP1_BECOMES_PROP2",
        "TOGGLE_PROP1_CHANGES_STATE_TO_PROP2",
        "TOGGLE_PROP1_REVEALS_PROP2_AS_IT_BECOMES_PROP3"
      ]
    }
  },
  "AUTO_FLAG1_CAUSES_IMPORT_OF_JSON": "AUTO_FLAG1_CAUSES_IMPORT_OF_JSON",
  "AUTO_FLAG1_SET_BY_FLAG2": "AUTO_FLAG1_SET_BY_FLAG2",
  "AUTO_FLAG1_SET_BY_INVS": "AUTO_FLAG1_SET_BY_INVS",
  "AUTO_FLAG1_SET_BY_PROPS": "AUTO_FLAG1_SET_BY_PROPS",
  "AUTO_PROP1_BECOMES_PROP2_BY_PROPS": "AUTO_PROP1_BECOMES_PROP2_BY_PROPS",
  "EXAMINE_PROP1_YIELDS_INV1": "EXAMINE_PROP1_YIELDS_INV1",
  "FLAG1_SET_BY_LOSING_INV1_WHEN_USED_WITH_PROP1": "FLAG1_SET_BY_LOSING_INV1_WHEN_USED_WITH_PROP1",
  "FLAG1_SET_BY_LOSING_INV1_USED_WITH_PROP1_AND_PROPS": "FLAG1_SET_BY_LOSING_INV1_USED_WITH_PROP1_AND_PROPS",
  "FLAG1_SET_BY_USING_INV1_WITH_INV2": "FLAG1_SET_BY_USING_INV1_WITH_INV2",
  "FLAG1_SET_BY_USING_INV1_WITH_PROP1": "FLAG1_SET_BY_USING_INV1_WITH_PROP1",
  "FLAG1_SET_BY_USING_INV1_WITH_PROP1_LOSE_PROPS": "FLAG1_SET_BY_USING_INV1_WITH_PROP1_LOSE_PROPS",
  "FLAG1_SET_BY_USING_INV1_WITH_PROP1_NEED_FLAGS": "FLAG1_SET_BY_USING_INV1_WITH_PROP1_NEED_FLAGS",
  "FLAG1_SET_BY_USING_PROP1_WITH_PROP2": "FLAG1_SET_BY_USING_PROP1_WITH_PROP2",
  "GIVE_INV1_TO_PROP1_GETS_INV2": "GIVE_INV1_TO_PROP1_GETS_INV2",
  "GIVE_INV1_TO_PROP1_SETS_FLAG1": "GIVE_INV1_TO_PROP1_SETS_FLAG1",
  "INPUT_INV1_PROP1_BECOMES_PROP2": "INPUT_INV1_PROP1_BECOMES_PROP2",
  "INPUT_PROP1_INV1_BECOMES_INV2": "INPUT_PROP1_INV1_BECOMES_INV2",
  "INV1_AND_INV2_COMBINE_TO_FORM_INV3": "INV1_AND_INV2_COMBINE_TO_FORM_INV3",
  "INV1_AND_INV2_GENERATE_AN_INV3": "INV1_AND_INV2_GENERATE_AN_INV3",
  "INV1_BECOMES_INV2_BY_KEEPING_INV3": "INV1_BECOMES_INV2_BY_KEEPING_INV3",
  "INV1_BECOMES_INV2_BY_KEEPING_PROP1": "INV1_BECOMES_INV2_BY_KEEPING_PROP1",
  "INV1_BECOMES_INV2_BY_LOSING_INV3": "INV1_BECOMES_INV2_BY_LOSING_INV3",
  "INV1_WITH_PROP1_REVEALS_PROP2_KEPT_ALL": "INV1_WITH_PROP1_REVEALS_PROP2_KEPT_ALL",
  "OBTAIN_INV1_BY_INV2_WITH_PROP1_LOSE_BOTH": "OBTAIN_INV1_BY_INV2_WITH_PROP1_LOSE_BOTH",
  "OBTAIN_INV1_BY_INV2_WITH_PROP1_LOSE_NONE": "OBTAIN_INV1_BY_INV2_WITH_PROP1_LOSE_NONE",
  "OBTAIN_INV1_BY_LOSING_INV2_KEEPING_PROP1": "OBTAIN_INV1_BY_LOSING_INV2_KEEPING_PROP1",
  "OBTAIN_INV1_BY_LOSING_PROP1_KEEPING_INV2": "OBTAIN_INV1_BY_LOSING_PROP1_KEEPING_INV2",
  "OBTAIN_INV1_BY_PROP1_WITH_PROP2_LOSE_PROPS": "OBTAIN_INV1_BY_PROP1_WITH_PROP2_LOSE_PROPS",
  "PROP1_APPEARS_WHEN_GRAB_PROP2_WITH_FLAG1": "PROP1_APPEARS_WHEN_GRAB_PROP2_WITH_FLAG1",
  "PROP1_APPEARS_WHEN_USE_INV1_WITH_PROP2": "PROP1_APPEARS_WHEN_USE_INV1_WITH_PROP2",
  "PROP1_BECOMES_PROP2_AS_INV1_BECOMES_INV2": "PROP1_BECOMES_PROP2_AS_INV1_BECOMES_INV2",
  "PROP1_BECOMES_PROP2_BY_KEEPING_INV1": "PROP1_BECOMES_PROP2_BY_KEEPING_INV1",
  "PROP1_BECOMES_PROP2_BY_KEEPING_PROP3": "PROP1_BECOMES_PROP2_BY_KEEPING_PROP3",
  "PROP1_BECOMES_PROP2_BY_LOSING_INV1": "PROP1_BECOMES_PROP2_BY_LOSING_INV1",
  "PROP1_BECOMES_PROP2_BY_LOSING_PROP3": "PROP1_BECOMES_PROP2_BY_LOSING_PROP3",
  "PROP1_BECOMES_PROP2_WHEN_GRAB_INV1": "PROP1_BECOMES_PROP2_WHEN_GRAB_INV1",
  "PROP1_CHANGES_STATE_TO_PROP2_BY_KEEPING_INV1": "PROP1_CHANGES_STATE_TO_PROP2_BY_KEEPING_INV1",
  "PROP1_GOES_WHEN_GRAB_INV1": "PROP1_GOES_WHEN_GRAB_INV1",
  "PROP1_STAYS_WHEN_GRAB_INV1": "PROP1_STAYS_WHEN_GRAB_INV1",
  "TALK_TO_PROP1_GETS_INV1": "TALK_TO_PROP1_GETS_INV1",
  "TALK_TO_PROP1_WITH_FLAG1_GETS_INV1": "TALK_TO_PROP1_WITH_FLAG1_GETS_INV1",
  "THROW_INV1_AT_PROP1_GETS_INV2_LOSE_BOTH": "THROW_INV1_AT_PROP1_GETS_INV2_LOSE_BOTH",
  "TOGGLE_PROP1_BECOMES_PROP2": "TOGGLE_PROP1_BECOMES_PROP2",
  "TOGGLE_PROP1_CHANGES_STATE_TO_PROP2": "TOGGLE_PROP1_CHANGES_STATE_TO_PROP2",
  "TOGGLE_PROP1_REVEALS_PROP2_AS_IT_BECOMES_PROP3": "TOGGLE_PROP1_REVEALS_PROP2_AS_IT_BECOMES_PROP3"
}
